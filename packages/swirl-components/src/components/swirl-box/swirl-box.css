:host {
  --swirl-box-scroll-border-top-width: var(--s-border-width-default);
  --swirl-box-scroll-border-bottom-width: var(--s-border-width-default);

  display: block;
  width: 100%;

  &(.box--bordered) {
    border: var(--s-border-width-default) solid var(--s-border-default);
  }

  &(.box--bordered-block-end) {
    border-block-end: var(--s-border-width-default) solid
      var(--s-border-default);
  }

  &(.box--bordered-block-start) {
    border-block-start: var(--s-border-width-default) solid
      var(--s-border-default);
  }

  &(.box--bordered-inline-end) {
    border-inline-end: var(--s-border-width-default) solid
      var(--s-border-default);
  }

  &(.box--bordered-inline-start) {
    border-inline-start: var(--s-border-width-default) solid
      var(--s-border-default);
  }

  &(.box--bordered-block-start-when-scrolled),
  &(.box--bordered-block-end-when-scrolled) {
    /*
    * Use scroll-timeline and animation-timeline to detect scrollable and
    * scrolled content and display the top border accordingly.
    */
    @supports (
      (scroll-timeline: --scroll-timeline y) and
        (animation-timeline: --scroll-timeline)
    ) {
      animation: box-border-reveal both, box-detect-scroll none;
      scroll-timeline: --scroll-timeline y;
      animation-timeline: --scroll-timeline;
    }
  }

  &(.box--bordered-block-start-when-scrolled) {
    @supports (
      (scroll-timeline: --scroll-timeline y) and
        (animation-timeline: --scroll-timeline)
    ) {
      border-top: var(--swirl-box-scroll-border-top-width) solid
        var(--s-border-default);
      animation-range: 1px 1px;
    }
  }

  &(.box--bordered-block-end-when-scrolled) {
    @supports (
      (scroll-timeline: --scroll-timeline y) and
        (animation-timeline: --scroll-timeline)
    ) {
      border-bottom: var(--swirl-box-scroll-border-bottom-width) solid
        var(--s-border-default);
      animation-range: calc(100% - 1px) calc(100% - 1px);
      animation-direction: reverse;
    }
  }

  &(.box--cover) {
    width: 100%;
    height: 100%;
  }

  & * {
    box-sizing: border-box;
  }
}

@keyframes box-border-reveal {
  0% {
    border-color: transparent;
  }
  100% {
    border-color: var(--s-border-default);
  }
}

@keyframes box-detect-scroll {
  from,
  to {
    --swirl-box-scroll-border-top-width: var(--s-border-width-default);
    --swirl-box-scroll-border-bottom-width: var(--s-border-width-default);
  }
}
