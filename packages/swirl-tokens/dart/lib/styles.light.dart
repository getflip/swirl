
//
// styles.light.dart
//

// Do not edit directly
// Generated on Wed, 31 Jul 2024 14:47:41 GMT



import 'dart:ui';
import 'package:flutter/widgets.dart';

class SwirlDesignTokensLight {
  SwirlDesignTokensLight._();

    static const actionCriticalDefault = Color(0xFFD50636); /* Used for containers that are critical and negative action elements. */
    static const actionCriticalDisabled = Color(0xFFF2F2F2); /* Used if a component with “Action Primary/Default” has a disabled state. */
    static const actionCriticalHovered = Color(0xFFB32739); /* Used if a component with “Action Critical/Default” has a hovered state. */
    static const actionCriticalPressed = Color(0xFF9F2334); /* Used if a component with “Action Critical/Default” has a pressed state. */
    static const actionNeutralDefault = Color(0xFFF2F2F2); /* Used for containers that are low emphasis action elements. */
    static const actionNeutralDisabled = Color(0xFFF2F2F2); /* Used if a component with “Action Neutral/Default” has a disabled state. */
    static const actionNeutralHovered = Color(0xFFEAEAEA); /* Used if a component with “Action Neutral/Default” has a hovered state. */
    static const actionNeutralPressed = Color(0xFFDFDFDF); /* Used if a component with “Action Neutral/Default” has a pressed state. */
    static const actionPrimaryDefault = Color(0xFF145AF5); /* Used for containers that are high emphasis action elements. */
    static const actionPrimaryDisabled = Color(0xFFF2F2F2); /* Used if a component with “Action Primary/Default” has a disabled state. */
    static const actionPrimaryHovered = Color(0xFF3773F7); /* Used if a component with “Action Primary/Default” has a hovered state. */
    static const actionPrimaryPressed = Color(0xFF5B8BF8); /* Used if a component with “Action Primary/Default” has a pressed state. */
    static const backgroundDefault = Color(0xFFFFFFFF); /* Usually used for the page background and elements that should not elevate from the background. */
    static const backgroundHovered = Color(0xFFF2F2F2); /* Used if a component with “Background/Default” has a hovered state. */
    static const backgroundPressed = Color(0xFFEAEAEA); /* Used if a component with “Background/Default” has a pressed state. */
    static const borderCritical = Color(0xFFD50636); /* Usally used as an border on critical components. */
    static const borderDefault = Color(0xFFEAEAEA); /* Usually used for low emphasis borders and espacially divider elements. */
    static const borderHighlight = Color(0xFF0037AF); /* Used as border color on containers that need to be highlighted (e.g. form fields). */
    static const borderInfo = Color(0xFF145AF5); /* Usally used as an border on info components. */
    static const borderOnHighlight = Color(0xFFAEC9F6); /* Used as border color on containers that have an highlight surface */
    static const borderRadiusBase = 12.00;
    static const borderRadiusFullRound = 99999.00;
    static const borderRadiusL = 16.00;
    static const borderRadiusNull = 0.00;
    static const borderRadiusS = 4.00;
    static const borderRadiusSm = 8.00;
    static const borderRadiusXl = 20.00;
    static const borderRadiusXs = 2.00;
    static const borderStrong = Color(0xFFCFCFCF); /* Usually used for high emphasis borders. */
    static const borderSuccess = Color(0xFF088108); /* Usally used as an border on success components. */
    static const borderWarning = Color(0xFF935806); /* Usally used as an border on warning components. */
    static const borderWidth0 = 0.00;
    static const borderWidthDefault = 1.00;
    static const coreCustomerColorDark1Default = Color(0xFF568FDE);
    static const coreCustomerColorDark1Hovered = Color(0xFF79A4DF);
    static const coreCustomerColorDark1Pressed = Color(0xFF96B5E0);
    static const coreCustomerColorDark2Default = Color(0xFF2D477F);
    static const coreCustomerColorDark2Hovered = Color(0xFF34508D);
    static const coreCustomerColorDark2Pressed = Color(0xFF405B97);
    static const coreCustomerColorDark3Default = Color(0xFF568FDE);
    static const coreCustomerColorDark3Hovered = Color(0xFF79A4DF);
    static const coreCustomerColorDark3Pressed = Color(0xFF96B5E0);
    static const coreCustomerColorLight1Default = Color(0xFF145AF5);
    static const coreCustomerColorLight1Hovered = Color(0xFF3773F7);
    static const coreCustomerColorLight1Pressed = Color(0xFF5B8BF8);
    static const coreCustomerColorLight2Default = Color(0xFFE6EEFF);
    static const coreCustomerColorLight2Hovered = Color(0xFFD5E2FF);
    static const coreCustomerColorLight2Pressed = Color(0xFFBED2FF);
    static const coreCustomerColorLight3Default = Color(0xFF0037AF);
    static const coreCustomerColorLight3Hovered = Color(0xFF2655BB);
    static const coreCustomerColorLight3Pressed = Color(0xFF4D74C7);
    static const coreDecorativeDarkBananaSurface = Color(0xFFD1AF29);
    static const coreDecorativeDarkBananaSurfaceSubdued = Color(0xFF4D3E1E);
    static const coreDecorativeDarkBananaText = Color(0xFFD1AF29);
    static const coreDecorativeDarkBlueberrySurface = Color(0xFF7AACF0);
    static const coreDecorativeDarkBlueberrySurfaceSubdued = Color(0xFF29405B);
    static const coreDecorativeDarkBlueberryText = Color(0xFF7AACF0);
    static const coreDecorativeDarkChilliSurface = Color(0xFFF47878);
    static const coreDecorativeDarkChilliSurfaceSubdued = Color(0xFF4D2D2C);
    static const coreDecorativeDarkChilliText = Color(0xFFF47878);
    static const coreDecorativeDarkGrapeSurface = Color(0xFFD683FB);
    static const coreDecorativeDarkGrapeSurfaceSubdued = Color(0xFF4B2F62);
    static const coreDecorativeDarkGrapeText = Color(0xFFD683FB);
    static const coreDecorativeDarkKiwiSurface = Color(0xFF6FC882);
    static const coreDecorativeDarkKiwiSurfaceSubdued = Color(0xFF2A462A);
    static const coreDecorativeDarkKiwiText = Color(0xFF6FC882);
    static const coreDecorativeDarkPumpkinSurface = Color(0xFFED994B);
    static const coreDecorativeDarkPumpkinSurfaceSubdued = Color(0xFF523824);
    static const coreDecorativeDarkPumpkinText = Color(0xFFED994B);
    static const coreDecorativeDarkRadishSurface = Color(0xFFF278CC);
    static const coreDecorativeDarkRadishSurfaceSubdued = Color(0xFF4F3045);
    static const coreDecorativeDarkRadishText = Color(0xFFF278CC);
    static const coreDecorativeLightBananaSurface = Color(0xFFEABA2A);
    static const coreDecorativeLightBananaSurfaceSubdued = Color(0xFFFAF1C8);
    static const coreDecorativeLightBananaText = Color(0xFF9A5C00);
    static const coreDecorativeLightBlueberrySurface = Color(0xFF3F5FA7);
    static const coreDecorativeLightBlueberrySurfaceSubdued = Color(0xFFE6F1FF);
    static const coreDecorativeLightBlueberryText = Color(0xFF3F5FA7);
    static const coreDecorativeLightChilliSurface = Color(0xFFC31C1C);
    static const coreDecorativeLightChilliSurfaceSubdued = Color(0xFFFCE7ED);
    static const coreDecorativeLightChilliText = Color(0xFFC31C1C);
    static const coreDecorativeLightGrapeSurface = Color(0xFF822DA4);
    static const coreDecorativeLightGrapeSurfaceSubdued = Color(0xFFE9DCFF);
    static const coreDecorativeLightGrapeText = Color(0xFF822DA4);
    static const coreDecorativeLightKiwiSurface = Color(0xFF367745);
    static const coreDecorativeLightKiwiSurfaceSubdued = Color(0xFFDCF7DC);
    static const coreDecorativeLightKiwiText = Color(0xFF367745);
    static const coreDecorativeLightPumpkinSurface = Color(0xFFF59031);
    static const coreDecorativeLightPumpkinSurfaceSubdued = Color(0xFFFFE3CA);
    static const coreDecorativeLightPumpkinText = Color(0xFFA74C25);
    static const coreDecorativeLightRadishSurface = Color(0xFFBA1D8E);
    static const coreDecorativeLightRadishSurfaceSubdued = Color(0xFFFFDDF5);
    static const coreDecorativeLightRadishText = Color(0xFFBA1D8E);
    static const coreGray01 = Color(0xFFF2F2F2);
    static const coreGray02 = Color(0xFFEAEAEA);
    static const coreGray03 = Color(0xFFDFDFDF);
    static const coreGray04 = Color(0xFFCFCFCF);
    static const coreGray05 = Color(0xFF9E9E9E);
    static const coreGray06 = Color(0xFF6E6E6E);
    static const coreGray07 = Color(0xFF515151);
    static const coreGray08 = Color(0xFF3F3F3F);
    static const coreGray09 = Color(0xFF363636);
    static const coreGray10 = Color(0xFF2B2B2B);
    static const coreGray11 = Color(0xFF232323);
    static const coreGray12 = Color(0xFF191919);
    static const coreGrayBlack = Color(0xFF000000);
    static const coreGrayWhite = Color(0xFFFFFFFF);
    static const coreOnCustomerColorDark1 = Color(0xFF000000);
    static const coreOnCustomerColorDark2 = Color(0xFFF2F2F2);
    static const coreOnCustomerColorDark2Subdued = Color(0xFF96A3BF);
    static const coreOnCustomerColorLight1 = Color(0xFFFFFFFF);
    static const coreOnCustomerColorLight2 = Color(0xFF171717);
    static const coreOnCustomerColorLight2Subdued = Color(0xFF6A6D74);
    static const coreStatusDarkCriticalDefault = Color(0xFFE46464);
    static const coreStatusDarkCriticalHovered = Color(0xFFD27B79);
    static const coreStatusDarkCriticalPressed = Color(0xFFD79391);
    static const coreStatusDarkCriticalSubdued = Color(0xFF382126);
    static const coreStatusDarkInfoDefault = Color(0xFF648EE9);
    static const coreStatusDarkInfoSubdued = Color(0xFF21293A);
    static const coreStatusDarkSuccessDefault = Color(0xFF50A450);
    static const coreStatusDarkSuccessSubdued = Color(0xFF1A2C1A);
    static const coreStatusDarkWarningDefault = Color(0xFFF3B703);
    static const coreStatusDarkWarningSubdued = Color(0xFF2D2719);
    static const coreStatusLightCriticalDefault = Color(0xFFD50636);
    static const coreStatusLightCriticalHovered = Color(0xFFB32739);
    static const coreStatusLightCriticalPressed = Color(0xFF9F2334);
    static const coreStatusLightCriticalSubdued = Color(0xFFFCE7ED);
    static const coreStatusLightInfoDefault = Color(0xFF145AF5);
    static const coreStatusLightInfoSubdued = Color(0xFFE6F1FF);
    static const coreStatusLightSuccessDefault = Color(0xFF088108);
    static const coreStatusLightSuccessSubdued = Color(0xFFDCF7DC);
    static const coreStatusLightWarningDefault = Color(0xFFF3B703);
    static const coreStatusLightWarningStrong = Color(0xFF935806);
    static const coreStatusLightWarningSubdued = Color(0xFFFAF1C8);
    static const decorationNone = "none";
    static const decorationUnderline = "underline";
    static const decorativeBananaSurface = Color(0xFFEABA2A); /* Used as a decorative color. */
    static const decorativeBananaSurfaceSubdued = Color(0xFFFAF1C8); /* Used as a decorative color. */
    static const decorativeBananaText = Color(0xFF9A5C00); /* Used as a decorative color. */
    static const decorativeBlueberrySurface = Color(0xFF3F5FA7); /* Used as a decorative color. */
    static const decorativeBlueberrySurfaceSubdued = Color(0xFFE6F1FF); /* Used as a decorative color. */
    static const decorativeBlueberryText = Color(0xFF3F5FA7); /* Used as a decorative color. */
    static const decorativeChilliSurface = Color(0xFFC31C1C); /* Used as a decorative color. */
    static const decorativeChilliSurfaceSubdued = Color(0xFFFCE7ED); /* Used as a decorative color. */
    static const decorativeChilliText = Color(0xFFC31C1C); /* Used as a decorative color. */
    static const decorativeGrapeSurface = Color(0xFF822DA4); /* Used as a decorative color. */
    static const decorativeGrapeSurfaceSubdued = Color(0xFFE9DCFF); /* Used as a decorative color. */
    static const decorativeGrapeText = Color(0xFF822DA4); /* Used as a decorative color. */
    static const decorativeKiwiSurface = Color(0xFF367745); /* Used as a decorative color. */
    static const decorativeKiwiSurfaceSubdued = Color(0xFFDCF7DC); /* Used as a decorative color. */
    static const decorativeKiwiText = Color(0xFF367745); /* Used as a decorative color. */
    static const decorativePumpkinSurface = Color(0xFFF59031); /* Used as a decorative color. */
    static const decorativePumpkinSurfaceSubdued = Color(0xFFFFE3CA); /* Used as a decorative color. */
    static const decorativePumpkinText = Color(0xFFA74C25); /* Used as a decorative color. */
    static const decorativeRadishSurface = Color(0xFFBA1D8E); /* Used as a decorative color. */
    static const decorativeRadishSurfaceSubdued = Color(0xFFFFDDF5); /* Used as a decorative color. */
    static const decorativeRadishText = Color(0xFFBA1D8E); /* Used as a decorative color. */
    static const focusDefault = Color(0xFF0037AF);
    static const fontFamilyCode = "'Fira Mono', Courier, monospace";
    static const fontFamilyText = "'Inter var experimental', 'Inter var', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif";
    static const fontFamilyTextArabic = "-apple-system, system-ui";
    static const fontFamilyTextChineseSimplified = "'Inter var experimental', 'Inter var', 'Microsoft YaHei New', 微软雅黑, 'Microsoft Yahei', 'Microsoft JhengHei', 宋体, SimSun, sans-serif";
    static const fontFamilyTextChineseTraditional = "'Inter var experimental', 'Inter var', 'Microsoft JhengHei', 微軟正黑體, 'Microsoft JhengHei UI', 'Microsoft YaHei', 微軟雅黑, 宋体, SimSun, sans-serif";
    static const fontFamilyTextJapanese = "'Inter var experimental', 'Inter var', Hiragino Sans, 'ヒラギノ角ゴ ProN W3', 'Hiragino Kaku Gothic ProN', 'メイリオ', Meiryo, Osaka, 'MS PGothic', sans-serif";
    static const fontFamilyTextKorean = "'Inter var experimental', 'Inter var', 'Microsoft JhengHei', 微軟正黑體, 'Microsoft JhengHei UI', 'Microsoft YaHei', 微軟雅黑, 宋体, SimSun, sans-serif";
    static const fontSize2xl = 28.00; /* Usually used as main headline */
    static const fontSizeBase = 16.00; /* Usually used for the body, links and buttons  */
    static const fontSizeLg = 18.00; /* Usually used as level 3 headline */
    static const fontSizeSm = 14.00; /* Usually used for labels and captions */
    static const fontSizeXl = 20.00; /* Usually used as level 2 headline */
    static const fontWeightBold = FontWeight.w700;
    static const fontWeightMedium = FontWeight.w500;
    static const fontWeightNormal = FontWeight.w400;
    static const fontWeightSemibold = FontWeight.w600;
    static const iconCritical = Color(0xFFD50636); /* Used as critical icon color */
    static const iconDark = Color(0xFF191919); /* Used for low contrast decorative colors. */
    static const iconDefault = Color(0xFF6E6E6E); /* Used for low emphasis icons. */
    static const iconDisabled = Color(0xFFCFCFCF); /* Used if a icon element is disabled. */
    static const iconHighlight = Color(0xFF0037AF); /* Used to highlight icons. */
    static const iconInfo = Color(0xFF145AF5); /* Used as info icon color */
    static const iconOnActionPrimary = Color(0xFFFFFFFF); /* Used as a icon color on containers with action primary color. */
    static const iconOnImage = Color(0xFFFFFFFF); /* Used as a icon color on “Surface On Image/Default”. */
    static const iconOnStatus = Color(0xFFFFFFFF); /* Used as a icon color on containers with a default status color except on warning. */
    static const iconOnSurfaceHighlight = Color(0xFF171717); /* Used as icon color on containers with highlight color. */
    static const iconOnSurfaceHighlightSubdued = Color(0xFF6A6D74); /* Used as subdued icon color on containers with highlight color. */
    static const iconStrong = Color(0xFF191919); /* Used for high emphasis icons. */
    static const iconSuccess = Color(0xFF088108); /* Used as success icon color */
    static const iconWarning = Color(0xFF935806); /* Used as warning icon color */
    static const interactiveCriticalDefault = Color(0xFFD50636); /* Used for icon and text that are critical or negative interactive elements. */
    static const interactiveCriticalDisabled = Color(0xFFCFCFCF); /* Used if a component with “Interactive Critical/Default” has a disabled state. */
    static const interactiveCriticalHovered = Color(0xFFB32739); /* Used if a component with “Interactive Critical/Default” has a hovered state. */
    static const interactiveCriticalPressed = Color(0xFF9F2334); /* Used if a component with “Interactive Critical/Default” has a pressed state. */
    static const interactiveNeutralDefault = Color(0xFF6E6E6E); /* Used for icon and text that are low emphasis interactive elements. */
    static const interactiveNeutralDisabled = Color(0xFFCFCFCF); /* Used if a component with “Interactive Neutral/Default” has a disabled state. */
    static const interactiveNeutralHovered = Color(0xFF9E9E9E); /* Used if a component with “Interactive Neutral/Default” has a hovered state. */
    static const interactiveNeutralPressed = Color(0xFF9E9E9E); /* Used if a component with “Interactive Neutral/Default” has a pressed state. */
    static const interactivePrimaryDefault = Color(0xFF003DAF); /* Used for icon and text that are high emphasis interactive elements. */
    static const interactivePrimaryDisabled = Color(0xFFCCCDD1); /* Used if a component with “Interactive Primary/Default” has a disabled state. */
    static const interactivePrimaryHovered = Color(0xFF2655BB); /* Used if a component with “Interactive Primary/Default” has a hovered state. */
    static const interactivePrimaryPressed = Color(0xFF4D77C7); /* Used if a component with “Interactive Primary/Default” has a pressed state. */
    static const letterSpacingNormal = 0.00;
    static const letterSpacingTight = -0.22;
    static const letterSpacingTighter = -0.32;
    static const lineHeight2xl = 36.00;
    static const lineHeightBase = 22.00;
    static const lineHeightLg = 24.00;
    static const lineHeightSm = 20.00;
    static const lineHeightXl = 26.00;
    static const onSurfaceHighlightDefault = Color(0xFFD5E2FF); /* Used to place containers on “Surface Highlight/Default”. */
    static const shadowLevel1 = [BoxShadow(color: Color(0x0A171717), offset: Offset(0, 4), blurRadius: 16), BoxShadow(color: Color(0x0A171717), offset: Offset(0, 1), blurRadius: 4)];
    static const shadowLevel2 = [BoxShadow(color: Color(0x0A171717), offset: Offset(0, 4), blurRadius: 16), BoxShadow(color: Color(0x29171717), offset: Offset(0, 1), blurRadius: 4)];
    static const shadowLevel3 = [BoxShadow(color: Color(0x1F171717), offset: Offset(0, 12), blurRadius: 32), BoxShadow(color: Color(0x14171717), offset: Offset(0, 4), blurRadius: 12)];
    static const space0 = 0.00;
    static const space12 = 12.00;
    static const space16 = 16.00;
    static const space2 = 2.00;
    static const space20 = 20.00;
    static const space24 = 24.00;
    static const space32 = 32.00;
    static const space4 = 4.00;
    static const space40 = 40.00;
    static const space48 = 48.00;
    static const space64 = 64.00;
    static const space8 = 8.00;
    static const surfaceCriticalDefault = Color(0xFFD50636); /* Used as a background for critical surfaces. */
    static const surfaceCriticalSubdued = Color(0xFFFCE7ED); /* Used for low prio critical background. */
    static const surfaceDefault = Color(0xFFFFFFFF); /* Usually used for containers that need to be elevated. */
    static const surfaceHighlightDefault = Color(0xFFE6EEFF); /* Usually used for containers that need to be highlighted. */
    static const surfaceHighlightHovered = Color(0xFFD5E2FF); /* Used if a component with “Surface Highlight/Default” has a hovered state. */
    static const surfaceHighlightPressed = Color(0xFFBED2FF); /* Used if a component with “Surface Highlight/Default” has a pressed state. */
    static const surfaceHovered = Color(0xFFF2F2F2); /* Used if a component with “Surface/Default” has a hovered state. */
    static const surfaceInfoDefault = Color(0xFF145AF5); /* Used as a background for info surfaces. */
    static const surfaceInfoSubdued = Color(0xFFE6F1FF); /* Used for low prio info background. */
    static const surfaceNeutralDefault = Color(0xFF3F3F3F); /* Used as a background for neutral surfaces. */
    static const surfaceNeutralSubdued = Color(0xFFF2F2F2); /* Used for low prio neutral background. */
    static const surfaceOnImageDefault = Color(0x99000000); /* Usually used for containers on images */
    static const surfaceOverlayDefault = Color(0xFFFFFFFF); /* Usually used for containers that need to be more elevated. */
    static const surfaceOverlayHovered = Color(0xFFF2F2F2); /* Used if a component with “Surface Overlay/Default” has a hovered state. */
    static const surfaceOverlayPressed = Color(0xFFEAEAEA); /* Used if a component with “Surface Overlay/Default” has a pressed state. */
    static const surfacePressed = Color(0xFFEAEAEA); /* Used if a component with “Surface/Default” has a pressed state. */
    static const surfaceRaisedDefault = Color(0xFFF2F2F2); /* Usually used for elements that need contrast on surfaces or background */
    static const surfaceRaisedHovered = Color(0xFFEAEAEA); /* Used if a component with “On Surface/Default” has a hovered state. */
    static const surfaceRaisedPressed = Color(0xFFDFDFDF); /* Used if a component with “On Surface/Default” has a pressed state. */
    static const surfaceSuccessDefault = Color(0xFF088108); /* Used as a background for success surfaces. */
    static const surfaceSuccessSubdued = Color(0xFFDCF7DC); /* Used for low prio success background. */
    static const surfaceSunkenDefault = Color(0xFFF2F2F2);
    static const surfaceSunkenHovered = Color(0xFFEAEAEA);
    static const surfaceSunkenPressed = Color(0xFFDFDFDF);
    static const surfaceWarningDefault = Color(0xFFF3B703); /* Used as a background for warning surfaces. */
    static const surfaceWarningSubdued = Color(0xFFFAF1C8); /* Used for low prio warning background. */
    static const textCritical = Color(0xFFD50636); /* Used as critical text color */
    static const textDark = Color(0xFF191919); /* Used for low contrast decorative colors. */
    static const textDefault = Color(0xFF191919); /* Used for high emphasis text. */
    static const textDisabled = Color(0xFFCFCFCF); /* Used if a text element is disabled. */
    static const textHighlight = Color(0xFF0037AF); /* Used to highlight text. */
    static const textInfo = Color(0xFF145AF5); /* Used as info text color */
    static const textOnActionPrimary = Color(0xFFFFFFFF); /* Used as a text color on containers with action primary color. */
    static const textOnImage = Color(0xFFFFFFFF); /* Used as a text color on “Surface On Image/Default”. */
    static const textOnStatus = Color(0xFFFFFFFF); /* Used as a text color on containers with a default status color except on warning. */
    static const textOnSurfaceHighlight = Color(0xFF171717); /* Used as text color on containers with highlight color. */
    static const textOnSurfaceHighlightSubdued = Color(0xFF6A6D74); /* Used as subdued text color on containers with highlight color. */
    static const textSubdued = Color(0xFF6E6E6E); /* Used for low emphasis text. */
    static const textSuccess = Color(0xFF088108); /* Used as success text color */
    static const textWarning = Color(0xFF935806); /* Used as warning text color */
    static const z0 = "0";
    static const z10 = "10";
    static const z20 = "20";
    static const z30 = "30";
    static const z40 = "40";
    static const z50 = "50";
    static const zAuto = "auto";
}